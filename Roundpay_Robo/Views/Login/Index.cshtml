@model LoginPageModel
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Login";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
    string WID = Convert.ToString(ViewData["WID"]);
    string ThemeID = "t" + Convert.ToString(ViewData["Theme"]);
    string appName = "";
}
<div class="login-38">
    <div class="container">
        <div class="col-md-12">
            <div class="row login-box-6">

                <div class="col-lg-5 col-md-12 col-sm-12 align-self-center col-pad-0">
                    <div class="login-inner-form">
                        <div class="details">
                            <div class="logo-2 clearfix">
                                <a href="login-38.html">
                                    <img src="~/Theme/images/logo-2.png" alt="logo">
                                </a>
                            </div>
                            <h3>Sign Into Your Account</h3>

                            <div class="form-group form-box">
                                <input type="text" id="txtUser" name="email" class="form-control" placeholder="USER ID" aria-label="Email Address">
                            </div>
                            <div class="form-group form-box">
                                <input type="password" id="txtPassword" name="password" class="form-control" autocomplete="off" placeholder="PASSWORD" aria-label="Password">
                            </div>
                            <div class="form-group form-box checkbox clearfix">
                                <div class="form-check checkbox-theme">
                                    <input class="form-check-input" type="checkbox" value="" id="rememberMe">
                                    <label class="form-check-label" for="rememberMe">
                                        Remember me
                                    </label>
                                </div>
                                <a href="#">Forgot Password</a>
                            </div>
                            <div class="form-group">
                                <button id="btnLogin" type="button" value="LOGIN" class="btn-md btn-theme w-100">Login</button>
                                @*    <button type="submit" class="btn-md btn-theme w-100">Login</button>*@
                            </div>

                            <p>Don't have an account ?<a href="/SignUp" class="text-primary">Sign Up</a></p>
                        </div>
                    </div>
                </div>

                <div class="col-lg-7 col-md-12 col-sm-12 col-pad-0 bg-img align-self-center none-992">
                    @* <a href="/Login">
                        <img src="~/Theme/images/logo.png" class="logo" alt="logo">
                        </a>*@
                    <img src="~/Theme/images/img-2.jpg" />
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{

<script src="~/js/validator.js" asp-append-version="true"></script>
<script src="~/js/login.js" asp-append-version="true"></script>
    @if (Model.ThemeID == 4)
    {
<script type="text/javascript">
    $('.rploginSlide').each(function () {
        var $this = $(this);
        var $group = $this.find('.slide_group');
        var $slides = $this.find('.slide');
        var bulletArray = [];
        var currentIndex = 0;
        var timeout;

        function move(newIndex) {
            var animateLeft, slideLeft;

            advance();

            if ($group.is(':animated') || currentIndex === newIndex) {
                return;
            }

            bulletArray[currentIndex].removeClass('active');
            bulletArray[newIndex].addClass('active');

            if (newIndex > currentIndex) {
                slideLeft = '100%';
                animateLeft = '-100%';
            } else {
                slideLeft = '-100%';
                animateLeft = '100%';
            }

            $slides.eq(newIndex).css({
                display: 'block',
                left: slideLeft
            });
            $group.animate({
                left: animateLeft
            }, function () {
                $slides.eq(currentIndex).css({
                    display: 'none'
                });
                $slides.eq(newIndex).css({
                    left: 0
                });
                $group.css({
                    left: 0
                });
                currentIndex = newIndex;
            });
        }

        function advance() {
            clearTimeout(timeout);
            timeout = setTimeout(function () {
                if (currentIndex < ($slides.length - 1)) {
                    move(currentIndex + 1);
                } else {
                    move(0);
                }
            }, 4000);
        }

        $('.next_btn').on('click', function () {
            if (currentIndex < ($slides.length - 1)) {
                move(currentIndex + 1);
            } else {
                move(0);
            }
        });

        $('.previous_btn').on('click', function () {
            if (currentIndex !== 0) {
                move(currentIndex - 1);
            } else {
                move(3);
            }
        });

        $.each($slides, function (index) {
            var $button = $('<a class="slide_btn">•</a>');

            if (index === currentIndex) {
                $button.addClass('active');
            }
            $button.on('click', function () {
                move(index);
            }).appendTo('.slide_buttons');
            bulletArray.push($button);
        });

        advance();
    });</script>
    }

    @if (Model.ThemeID == 6)
    {
<script>
    $('.body').css("width", "-webkit-fill-available");
    $('.body').css("height", "100vh");
    $('.body').css("padding-top", "60px");
    const signUpButton = document.getElementById('signUp');
    const signInButton = document.getElementById('signIn');
    const container = document.getElementById('container');

    signUpButton.addEventListener('click', () => {
        container.classList.add("right-panel-active");
    });

    signInButton.addEventListener('click', () => {
        container.classList.remove("right-panel-active");
    });

    $(document).ready(function () {

        $('#btnSignUp').click(function () {
            SignUp();
        });
    });

    function SignUp() {
        var $v = $validator;
        errorMsg.removeClass('hide');
        var Name = $('#txtName'), OutletName = $('#txtOname'), DdlRole = $('#ddlRole'), MobileNo = $('#txtMobileNo'), Email = $('#txtEmail'),
            Address = $('#txtAddress'), PinCode = $('#txtPinCode'), ReferralID = $('#hdnReferralID'), pan = $('#txtPAN'), gstin = $('#txtGSTIN');

        var UserName = Name.val(),
            OutletName = OutletName.val(),
            DdlRole = DdlRole.val(),
            MobileNo = MobileNo.val(),
            Email = Email.val(),
            Address = Address.val(),
            PinCode = PinCode.val(),
            ReferralID = ReferralID.val(),
            PAN = pan.val(),
            GSTIN = gstin.val();

        var ct = {
            nam: $('#txtName'), Oname: $('#txtOname'), mob: $('#txtMobileNo'), eml: $('#txtEmail'), rle: $('#ddlRole'), btn: $('#btnSignUp'), pnc: $('#txtPinCode'), Add: $('#txtAddress'), pan: $('#txtPAN'), gstin: $('#txtGSTIN')
        };
        var IsE = {
            nam: ($v.$IsNum(ct.nam.val()) || ct.nam.val().trim() == '' || ct.nam.val().length > 100),
            Onam: ($v.$IsNum(ct.Oname.val()) || ct.Oname.val().trim() == '' || ct.Oname.val().length > 100),
            rle: ct.rle.val() === null || ct.rle.val() == 0,
            mob: (ct.mob.val().length !== 10 || !$v.$IsMob(ct.mob.val())),
            eml: (!$v.$IsEmail(ct.eml.val()) || ct.eml.val().length > 256),
            pnc: (!$v.$IsPincode(ct.pnc.val()))
        }
        $v.showErrorFor(ct.nam, 'This Field is mandatory.', IsE.nam);
        $v.showErrorFor(ct.Oname, 'This Field is mandatory.', IsE.Onam);
        $v.showErrorFor(ct.rle, 'Role is required.', IsE.rle);
        $v.showErrorFor(ct.mob, 'This Field is mandatory.', IsE.mob);
        $v.showErrorFor(ct.eml, 'This Field is mandatory.', IsE.eml);
        $v.showErrorFor(ct.pnc, 'This Field is mandatory.', IsE.pnc);
        IsE.err = (IsE.nam || IsE.Onam || IsE.rle || IsE.mob || IsE.eml || IsE.pnc);
        if (IsE.err) {
            return false;
        }

        var UserCreate = {};
        UserCreate.Name = UserName;
        UserCreate.OutletName = OutletName;
        UserCreate.RoleID = DdlRole;
        UserCreate.MobileNo = MobileNo;
        UserCreate.EmailID = Email;
        UserCreate.Address = Address;
        UserCreate.Pincode = PinCode;
        UserCreate.ReferalID = ReferralID;
        UserCreate.PAN = PAN;
        UserCreate.GSTIN = GSTIN;

        preloader.load();
        $.ajax({
            type: 'POST',
            url: '/Signup',
            dataType: 'json',
            contentType: 'application/json',
            data: JSON.stringify(UserCreate),
            success: function (result) {
                alert(result.msg)
                if (result.statuscode === an.type.success) {
                    ct.nam.val('');
                    ct.Oname.val('');
                    ct.pan.val('');
                    ct.gstin.val('');
                    ct.pnc.val('');
                    ct.mob.val('');
                    ct.eml.val('');
                    $('#txtAddress').val('');
                }
            }, statusCode: {
                500: function () {
                    Alerts('Oops! Server error', AlertStatus.RED);
                },
                0: function () {
                    Alerts('Oops! Internet Connection was broken', AlertStatus.RED);
                }
            },
            error: function (xhr, result) {
                Alerts(result, AlertStatus.RED);
            },
            complete: function () {
                preloader.remove();
            }
        });
    };

</script>
    }
}

